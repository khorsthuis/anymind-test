/*
 * This file is generated by jOOQ.
 */
package com.AnyMind.api.tables.records;


import com.AnyMind.api.enums.PaymentMethod;
import com.AnyMind.api.tables.PaymentMethods;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.17.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PaymentMethodsRecord extends UpdatableRecordImpl<PaymentMethodsRecord> implements Record5<Integer, PaymentMethod, Double, Double, Double> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.payment_methods.id</code>.
     */
    public PaymentMethodsRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.payment_methods.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.payment_methods.payment_method</code>.
     */
    public PaymentMethodsRecord setPaymentMethod(PaymentMethod value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.payment_methods.payment_method</code>.
     */
    public PaymentMethod getPaymentMethod() {
        return (PaymentMethod) get(1);
    }

    /**
     * Setter for <code>public.payment_methods.price_modifier_lower</code>.
     */
    public PaymentMethodsRecord setPriceModifierLower(Double value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.payment_methods.price_modifier_lower</code>.
     */
    public Double getPriceModifierLower() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>public.payment_methods.price_modifier_upper</code>.
     */
    public PaymentMethodsRecord setPriceModifierUpper(Double value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.payment_methods.price_modifier_upper</code>.
     */
    public Double getPriceModifierUpper() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>public.payment_methods.points_applicable</code>.
     */
    public PaymentMethodsRecord setPointsApplicable(Double value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.payment_methods.points_applicable</code>.
     */
    public Double getPointsApplicable() {
        return (Double) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, PaymentMethod, Double, Double, Double> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, PaymentMethod, Double, Double, Double> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return PaymentMethods.PAYMENT_METHODS.ID;
    }

    @Override
    public Field<PaymentMethod> field2() {
        return PaymentMethods.PAYMENT_METHODS.PAYMENT_METHOD;
    }

    @Override
    public Field<Double> field3() {
        return PaymentMethods.PAYMENT_METHODS.PRICE_MODIFIER_LOWER;
    }

    @Override
    public Field<Double> field4() {
        return PaymentMethods.PAYMENT_METHODS.PRICE_MODIFIER_UPPER;
    }

    @Override
    public Field<Double> field5() {
        return PaymentMethods.PAYMENT_METHODS.POINTS_APPLICABLE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public PaymentMethod component2() {
        return getPaymentMethod();
    }

    @Override
    public Double component3() {
        return getPriceModifierLower();
    }

    @Override
    public Double component4() {
        return getPriceModifierUpper();
    }

    @Override
    public Double component5() {
        return getPointsApplicable();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public PaymentMethod value2() {
        return getPaymentMethod();
    }

    @Override
    public Double value3() {
        return getPriceModifierLower();
    }

    @Override
    public Double value4() {
        return getPriceModifierUpper();
    }

    @Override
    public Double value5() {
        return getPointsApplicable();
    }

    @Override
    public PaymentMethodsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public PaymentMethodsRecord value2(PaymentMethod value) {
        setPaymentMethod(value);
        return this;
    }

    @Override
    public PaymentMethodsRecord value3(Double value) {
        setPriceModifierLower(value);
        return this;
    }

    @Override
    public PaymentMethodsRecord value4(Double value) {
        setPriceModifierUpper(value);
        return this;
    }

    @Override
    public PaymentMethodsRecord value5(Double value) {
        setPointsApplicable(value);
        return this;
    }

    @Override
    public PaymentMethodsRecord values(Integer value1, PaymentMethod value2, Double value3, Double value4, Double value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PaymentMethodsRecord
     */
    public PaymentMethodsRecord() {
        super(PaymentMethods.PAYMENT_METHODS);
    }

    /**
     * Create a detached, initialised PaymentMethodsRecord
     */
    public PaymentMethodsRecord(Integer id, PaymentMethod paymentMethod, Double priceModifierLower, Double priceModifierUpper, Double pointsApplicable) {
        super(PaymentMethods.PAYMENT_METHODS);

        setId(id);
        setPaymentMethod(paymentMethod);
        setPriceModifierLower(priceModifierLower);
        setPriceModifierUpper(priceModifierUpper);
        setPointsApplicable(pointsApplicable);
    }

    /**
     * Create a detached, initialised PaymentMethodsRecord
     */
    public PaymentMethodsRecord(com.AnyMind.api.tables.pojos.PaymentMethods value) {
        super(PaymentMethods.PAYMENT_METHODS);

        if (value != null) {
            setId(value.getId());
            setPaymentMethod(value.getPaymentMethod());
            setPriceModifierLower(value.getPriceModifierLower());
            setPriceModifierUpper(value.getPriceModifierUpper());
            setPointsApplicable(value.getPointsApplicable());
        }
    }
}
